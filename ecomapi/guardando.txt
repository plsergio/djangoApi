class CreateHero(graphene.Mutation):
    class Arguments:
        input = HeroInput(required=True)
    ok = graphene.Boolean()
    hero = graphene.Field(HeroType)

    @staticmethod
    def mutate(root, info, input=None):
        ok = True
        hero_instance = Hero(name=input.name)
        hero_instance.save()
        return CreateHero(ok=ok, hero=hero_instance)

class UpdateHero(graphene.Mutation):
    class Arguments:
        id = graphene.Int(required=True)
        input = HeroInput(required=True)
    ok = graphene.Boolean()
    hero = graphene.Field(HeroType)

    @staticmethod
    def mutate(root, info, id, input=None):
        ok = False
        hero_instance: Hero.objects.get(pk=id)
        if hero_instance :
            ok = True
            hero_instance.name = input.name
            hero_instance.save()
            return UpdateHero(ok=ok, hero=hero_instance)
        return UpdateHero(ok=ok, hero=None)
